### YamlMime:ManagedReference
items:
- uid: DulcisX.Core.Extensions.VsRunningDocumentTableExtensions
  commentId: T:DulcisX.Core.Extensions.VsRunningDocumentTableExtensions
  id: VsRunningDocumentTableExtensions
  parent: DulcisX.Core.Extensions
  children:
  - DulcisX.Core.Extensions.VsRunningDocumentTableExtensions.GetNode(Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable,System.UInt32,DulcisX.Nodes.SolutionNode)
  langs:
  - csharp
  - vb
  name: VsRunningDocumentTableExtensions
  nameWithType: VsRunningDocumentTableExtensions
  fullName: DulcisX.Core.Extensions.VsRunningDocumentTableExtensions
  type: Class
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/Extensions/VsRunningDocumentTableExtensions.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: VsRunningDocumentTableExtensions
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/Extensions/VsRunningDocumentTableExtensions.cs
    startLine: 10
  assemblies:
  - DulcisX
  namespace: DulcisX.Core.Extensions
  summary: "\n<xref href=\"Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.VisualStudio.Shell.Interop.IVsRunningDocTableEvents\" data-throw-if-not-resolved=\"false\"></xref> specific Extensions.\n"
  example: []
  syntax:
    content: public static class VsRunningDocumentTableExtensions
    content.vb: Public Module VsRunningDocumentTableExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: DulcisX.Core.Extensions.VsRunningDocumentTableExtensions.GetNode(Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable,System.UInt32,DulcisX.Nodes.SolutionNode)
  commentId: M:DulcisX.Core.Extensions.VsRunningDocumentTableExtensions.GetNode(Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable,System.UInt32,DulcisX.Nodes.SolutionNode)
  id: GetNode(Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable,System.UInt32,DulcisX.Nodes.SolutionNode)
  isExtensionMethod: true
  parent: DulcisX.Core.Extensions.VsRunningDocumentTableExtensions
  langs:
  - csharp
  - vb
  name: GetNode(IVsRunningDocumentTable, UInt32, SolutionNode)
  nameWithType: VsRunningDocumentTableExtensions.GetNode(IVsRunningDocumentTable, UInt32, SolutionNode)
  fullName: DulcisX.Core.Extensions.VsRunningDocumentTableExtensions.GetNode(Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable, System.UInt32, DulcisX.Nodes.SolutionNode)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/Extensions/VsRunningDocumentTableExtensions.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: GetNode
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/Extensions/VsRunningDocumentTableExtensions.cs
    startLine: 19
  assemblies:
  - DulcisX
  namespace: DulcisX.Core.Extensions
  summary: "\nReturns an <xref href=\"DulcisX.Nodes.IPhysicalNode\" data-throw-if-not-resolved=\"false\"></xref> for the given document cookie.\n"
  example: []
  syntax:
    content: public static IPhysicalNode GetNode(this IVsRunningDocumentTable rdt, uint docCookie, SolutionNode solution)
    parameters:
    - id: rdt
      type: Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable
      description: The running document table of the current environment.
    - id: docCookie
      type: System.UInt32
      description: The document cookie, which identfies the node within the <xref href="Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable" data-throw-if-not-resolved="false"></xref>.
    - id: solution
      type: DulcisX.Nodes.SolutionNode
      description: The solution of the current environment, usually <xref href="DulcisX.Core.PackageX.Solution" data-throw-if-not-resolved="false"></xref>
    return:
      type: DulcisX.Nodes.IPhysicalNode
      description: A new instance of an <xref href="DulcisX.Nodes.IPhysicalNode" data-throw-if-not-resolved="false"></xref> for the given document cookie.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetNode(rdt As IVsRunningDocumentTable, docCookie As UInteger, solution As SolutionNode) As IPhysicalNode
  overload: DulcisX.Core.Extensions.VsRunningDocumentTableExtensions.GetNode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable
  commentId: T:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable
  parent: Microsoft.VisualStudio.Shell.Interop
  isExternal: true
  name: IVsRunningDocumentTable
  nameWithType: IVsRunningDocumentTable
  fullName: Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable
- uid: Microsoft.VisualStudio.Shell.Interop.IVsRunningDocTableEvents
  commentId: T:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocTableEvents
  isExternal: true
- uid: DulcisX.Core.Extensions
  commentId: N:DulcisX.Core.Extensions
  name: DulcisX.Core.Extensions
  nameWithType: DulcisX.Core.Extensions
  fullName: DulcisX.Core.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Shell.Interop
  commentId: N:Microsoft.VisualStudio.Shell.Interop
  isExternal: true
  name: Microsoft.VisualStudio.Shell.Interop
  nameWithType: Microsoft.VisualStudio.Shell.Interop
  fullName: Microsoft.VisualStudio.Shell.Interop
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DulcisX.Nodes.IPhysicalNode
  commentId: T:DulcisX.Nodes.IPhysicalNode
  parent: DulcisX.Nodes
  name: IPhysicalNode
  nameWithType: IPhysicalNode
  fullName: DulcisX.Nodes.IPhysicalNode
- uid: DulcisX.Core.PackageX.Solution
  commentId: P:DulcisX.Core.PackageX.Solution
  isExternal: true
- uid: DulcisX.Core.Extensions.VsRunningDocumentTableExtensions.GetNode*
  commentId: Overload:DulcisX.Core.Extensions.VsRunningDocumentTableExtensions.GetNode
  name: GetNode
  nameWithType: VsRunningDocumentTableExtensions.GetNode
  fullName: DulcisX.Core.Extensions.VsRunningDocumentTableExtensions.GetNode
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: DulcisX.Nodes.SolutionNode
  commentId: T:DulcisX.Nodes.SolutionNode
  parent: DulcisX.Nodes
  name: SolutionNode
  nameWithType: SolutionNode
  fullName: DulcisX.Nodes.SolutionNode
- uid: DulcisX.Nodes
  commentId: N:DulcisX.Nodes
  name: DulcisX.Nodes
  nameWithType: DulcisX.Nodes
  fullName: DulcisX.Nodes

### YamlMime:ManagedReference
items:
- uid: DulcisX.Core.Components.InfoBar
  commentId: T:DulcisX.Core.Components.InfoBar
  id: InfoBar
  parent: DulcisX.Core.Components
  children:
  - DulcisX.Core.Components.InfoBar.NewMessage(System.Boolean)
  - DulcisX.Core.Components.InfoBar.RemoveMessage(DulcisX.Core.Components.InfoBarHandle)
  langs:
  - csharp
  - vb
  name: InfoBar
  nameWithType: InfoBar
  fullName: DulcisX.Core.Components.InfoBar
  type: Class
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/Components/InfoBar/InfoBar.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: InfoBar
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/Components/InfoBar/InfoBar.cs
    startLine: 12
  assemblies:
  - DulcisX
  namespace: DulcisX.Core.Components
  summary: "\nWraps around <xref href=\"Microsoft.VisualStudio.Shell.Interop.IVsInfoBarHost\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.VisualStudio.Shell.Interop.IVsInfoBar\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class InfoBar
    content.vb: Public Class InfoBar
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DulcisX.Core.Components.InfoBar.NewMessage(System.Boolean)
  commentId: M:DulcisX.Core.Components.InfoBar.NewMessage(System.Boolean)
  id: NewMessage(System.Boolean)
  parent: DulcisX.Core.Components.InfoBar
  langs:
  - csharp
  - vb
  name: NewMessage(Boolean)
  nameWithType: InfoBar.NewMessage(Boolean)
  fullName: DulcisX.Core.Components.InfoBar.NewMessage(System.Boolean)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/Components/InfoBar/InfoBar.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: NewMessage
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/Components/InfoBar/InfoBar.cs
    startLine: 201
  assemblies:
  - DulcisX
  namespace: DulcisX.Core.Components
  summary: "\nInstantiates a new InfoBar message.\n"
  example: []
  syntax:
    content: public IBaseInfoMessageBuilder NewMessage(bool hasCloseButton = true)
    parameters:
    - id: hasCloseButton
      type: System.Boolean
      description: Specifies whether the InfoBar has a &apos;x&apos; button.
    return:
      type: DulcisX.Core.Components.IBaseInfoMessageBuilder
      description: An <xref href="DulcisX.Core.Components.IBaseInfoMessageBuilder" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Function NewMessage(hasCloseButton As Boolean = True) As IBaseInfoMessageBuilder
  overload: DulcisX.Core.Components.InfoBar.NewMessage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DulcisX.Core.Components.InfoBar.RemoveMessage(DulcisX.Core.Components.InfoBarHandle)
  commentId: M:DulcisX.Core.Components.InfoBar.RemoveMessage(DulcisX.Core.Components.InfoBarHandle)
  id: RemoveMessage(DulcisX.Core.Components.InfoBarHandle)
  parent: DulcisX.Core.Components.InfoBar
  langs:
  - csharp
  - vb
  name: RemoveMessage(InfoBarHandle)
  nameWithType: InfoBar.RemoveMessage(InfoBarHandle)
  fullName: DulcisX.Core.Components.InfoBar.RemoveMessage(DulcisX.Core.Components.InfoBarHandle)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/Components/InfoBar/InfoBar.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: RemoveMessage
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/Components/InfoBar/InfoBar.cs
    startLine: 208
  assemblies:
  - DulcisX
  namespace: DulcisX.Core.Components
  summary: "\nRemoves a InfoBar message from the <xref href=\"Microsoft.VisualStudio.Shell.Interop.IVsInfoBarHost\" data-throw-if-not-resolved=\"false\"></xref> with the specified <xref href=\"DulcisX.Core.Components.InfoBarHandle\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void RemoveMessage(InfoBarHandle handle)
    parameters:
    - id: handle
      type: DulcisX.Core.Components.InfoBarHandle
      description: Pointer to the InfoBar message which should be removed.
    content.vb: Public Sub RemoveMessage(handle As InfoBarHandle)
  overload: DulcisX.Core.Components.InfoBar.RemoveMessage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.VisualStudio.Shell.Interop.IVsInfoBarHost
  commentId: T:Microsoft.VisualStudio.Shell.Interop.IVsInfoBarHost
  isExternal: true
- uid: Microsoft.VisualStudio.Shell.Interop.IVsInfoBar
  commentId: T:Microsoft.VisualStudio.Shell.Interop.IVsInfoBar
  isExternal: true
- uid: DulcisX.Core.Components
  commentId: N:DulcisX.Core.Components
  name: DulcisX.Core.Components
  nameWithType: DulcisX.Core.Components
  fullName: DulcisX.Core.Components
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DulcisX.Core.Components.IBaseInfoMessageBuilder
  commentId: T:DulcisX.Core.Components.IBaseInfoMessageBuilder
  parent: DulcisX.Core.Components
  name: IBaseInfoMessageBuilder
  nameWithType: IBaseInfoMessageBuilder
  fullName: DulcisX.Core.Components.IBaseInfoMessageBuilder
- uid: DulcisX.Core.Components.InfoBar.NewMessage*
  commentId: Overload:DulcisX.Core.Components.InfoBar.NewMessage
  name: NewMessage
  nameWithType: InfoBar.NewMessage
  fullName: DulcisX.Core.Components.InfoBar.NewMessage
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DulcisX.Core.Components.InfoBarHandle
  commentId: T:DulcisX.Core.Components.InfoBarHandle
  parent: DulcisX.Core.Components
  name: InfoBarHandle
  nameWithType: InfoBarHandle
  fullName: DulcisX.Core.Components.InfoBarHandle
- uid: DulcisX.Core.Components.InfoBar.RemoveMessage*
  commentId: Overload:DulcisX.Core.Components.InfoBar.RemoveMessage
  name: RemoveMessage
  nameWithType: InfoBar.RemoveMessage
  fullName: DulcisX.Core.Components.InfoBar.RemoveMessage

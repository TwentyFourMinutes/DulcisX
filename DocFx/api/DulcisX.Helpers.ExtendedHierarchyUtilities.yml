### YamlMime:ManagedReference
items:
- uid: DulcisX.Helpers.ExtendedHierarchyUtilities
  commentId: T:DulcisX.Helpers.ExtendedHierarchyUtilities
  id: ExtendedHierarchyUtilities
  parent: DulcisX.Helpers
  children:
  - DulcisX.Helpers.ExtendedHierarchyUtilities.IsMiscellaneousFilesProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  - DulcisX.Helpers.ExtendedHierarchyUtilities.IsNodeType(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Guid)
  - DulcisX.Helpers.ExtendedHierarchyUtilities.IsRealProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  - DulcisX.Helpers.ExtendedHierarchyUtilities.IsSolutionItemsProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  langs:
  - csharp
  - vb
  name: ExtendedHierarchyUtilities
  nameWithType: ExtendedHierarchyUtilities
  fullName: DulcisX.Helpers.ExtendedHierarchyUtilities
  type: Class
  source:
    remote:
      path: src/DulcisX/DulcisX/Helpers/ExtendedHierarchyUtilities.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: ExtendedHierarchyUtilities
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Helpers/ExtendedHierarchyUtilities.cs
    startLine: 12
  assemblies:
  - DulcisX
  namespace: DulcisX.Helpers
  summary: "\nExtends the <xref href=\"Microsoft.Internal.VisualStudio.PlatformUI.HierarchyUtilities\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public static class ExtendedHierarchyUtilities
    content.vb: Public Module ExtendedHierarchyUtilities
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: DulcisX.Helpers.ExtendedHierarchyUtilities.IsSolutionItemsProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  commentId: M:DulcisX.Helpers.ExtendedHierarchyUtilities.IsSolutionItemsProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  id: IsSolutionItemsProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  parent: DulcisX.Helpers.ExtendedHierarchyUtilities
  langs:
  - csharp
  - vb
  name: IsSolutionItemsProject(IVsHierarchy)
  nameWithType: ExtendedHierarchyUtilities.IsSolutionItemsProject(IVsHierarchy)
  fullName: DulcisX.Helpers.ExtendedHierarchyUtilities.IsSolutionItemsProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Helpers/ExtendedHierarchyUtilities.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: IsSolutionItemsProject
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Helpers/ExtendedHierarchyUtilities.cs
    startLine: 19
  assemblies:
  - DulcisX
  namespace: DulcisX.Helpers
  summary: "\nGets a value indicating whether a <xref href=\"Microsoft.VisualStudio.Shell.Interop.IVsHierarchy\" data-throw-if-not-resolved=\"false\"></xref> is a Solution Items Project.\n"
  example: []
  syntax:
    content: public static bool IsSolutionItemsProject(IVsHierarchy hierarchy)
    parameters:
    - id: hierarchy
      type: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
      description: The hierarchy which should be tested.
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if the hierarchy is a Solution Items Project; otherwise <xref uid="langword_csharp_false" name="false" href=""></xref>.
    content.vb: Public Shared Function IsSolutionItemsProject(hierarchy As IVsHierarchy) As Boolean
  overload: DulcisX.Helpers.ExtendedHierarchyUtilities.IsSolutionItemsProject*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DulcisX.Helpers.ExtendedHierarchyUtilities.IsMiscellaneousFilesProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  commentId: M:DulcisX.Helpers.ExtendedHierarchyUtilities.IsMiscellaneousFilesProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  id: IsMiscellaneousFilesProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  parent: DulcisX.Helpers.ExtendedHierarchyUtilities
  langs:
  - csharp
  - vb
  name: IsMiscellaneousFilesProject(IVsHierarchy)
  nameWithType: ExtendedHierarchyUtilities.IsMiscellaneousFilesProject(IVsHierarchy)
  fullName: DulcisX.Helpers.ExtendedHierarchyUtilities.IsMiscellaneousFilesProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Helpers/ExtendedHierarchyUtilities.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: IsMiscellaneousFilesProject
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Helpers/ExtendedHierarchyUtilities.cs
    startLine: 27
  assemblies:
  - DulcisX
  namespace: DulcisX.Helpers
  summary: "\nGets a value indicating whether a <xref href=\"Microsoft.VisualStudio.Shell.Interop.IVsHierarchy\" data-throw-if-not-resolved=\"false\"></xref> is a Miscellaneous Files Project.\n"
  example: []
  syntax:
    content: public static bool IsMiscellaneousFilesProject(IVsHierarchy hierarchy)
    parameters:
    - id: hierarchy
      type: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
      description: The hierarchy which should be tested.
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if the hierarchy is a Miscellaneous Files Project; otherwise <xref uid="langword_csharp_false" name="false" href=""></xref>.
    content.vb: Public Shared Function IsMiscellaneousFilesProject(hierarchy As IVsHierarchy) As Boolean
  overload: DulcisX.Helpers.ExtendedHierarchyUtilities.IsMiscellaneousFilesProject*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DulcisX.Helpers.ExtendedHierarchyUtilities.IsRealProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  commentId: M:DulcisX.Helpers.ExtendedHierarchyUtilities.IsRealProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  id: IsRealProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  parent: DulcisX.Helpers.ExtendedHierarchyUtilities
  langs:
  - csharp
  - vb
  name: IsRealProject(IVsHierarchy)
  nameWithType: ExtendedHierarchyUtilities.IsRealProject(IVsHierarchy)
  fullName: DulcisX.Helpers.ExtendedHierarchyUtilities.IsRealProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Helpers/ExtendedHierarchyUtilities.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: IsRealProject
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Helpers/ExtendedHierarchyUtilities.cs
    startLine: 35
  assemblies:
  - DulcisX
  namespace: DulcisX.Helpers
  summary: "\nGets a value indicating whether a <xref href=\"Microsoft.VisualStudio.Shell.Interop.IVsHierarchy\" data-throw-if-not-resolved=\"false\"></xref> is a real Project. The <xref href=\"Microsoft.Internal.VisualStudio.PlatformUI.HierarchyUtilities.IsProject(Microsoft.VisualStudio.Shell.IVsHierarchyItemIdentity)\" data-throw-if-not-resolved=\"false\"></xref> method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> for Solution Folders, which this method doesn&apos;t.\n"
  example: []
  syntax:
    content: public static bool IsRealProject(IVsHierarchy hierarchy)
    parameters:
    - id: hierarchy
      type: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
      description: The hierarchy which should be tested.
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if the hierarchy is a real Project; otherwise <xref uid="langword_csharp_false" name="false" href=""></xref>.
    content.vb: Public Shared Function IsRealProject(hierarchy As IVsHierarchy) As Boolean
  overload: DulcisX.Helpers.ExtendedHierarchyUtilities.IsRealProject*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DulcisX.Helpers.ExtendedHierarchyUtilities.IsNodeType(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Guid)
  commentId: M:DulcisX.Helpers.ExtendedHierarchyUtilities.IsNodeType(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Guid)
  id: IsNodeType(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Guid)
  parent: DulcisX.Helpers.ExtendedHierarchyUtilities
  langs:
  - csharp
  - vb
  name: IsNodeType(IVsHierarchy, Guid)
  nameWithType: ExtendedHierarchyUtilities.IsNodeType(IVsHierarchy, Guid)
  fullName: DulcisX.Helpers.ExtendedHierarchyUtilities.IsNodeType(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy, System.Guid)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Helpers/ExtendedHierarchyUtilities.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: IsNodeType
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Helpers/ExtendedHierarchyUtilities.cs
    startLine: 55
  assemblies:
  - DulcisX
  namespace: DulcisX.Helpers
  summary: "\nGets a value indicating whether a <xref href=\"Microsoft.VisualStudio.Shell.Interop.IVsHierarchy\" data-throw-if-not-resolved=\"false\"></xref> matches a given <xref href=\"Microsoft.VisualStudio.VSConstants.CLSID\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static bool IsNodeType(IVsHierarchy hierarchy, Guid clsidGuid)
    parameters:
    - id: hierarchy
      type: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
      description: The hierarchy which should be tested.
    - id: clsidGuid
      type: System.Guid
      description: The <xref href="Microsoft.VisualStudio.VSConstants.CLSID" data-throw-if-not-resolved="false"></xref> guid which should be tested for.
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if the hierarchy matches the given <xref href="Microsoft.VisualStudio.VSConstants.CLSID" data-throw-if-not-resolved="false"></xref>; otherwise <xref uid="langword_csharp_false" name="false" href=""></xref>.
    content.vb: Public Shared Function IsNodeType(hierarchy As IVsHierarchy, clsidGuid As Guid) As Boolean
  overload: DulcisX.Helpers.ExtendedHierarchyUtilities.IsNodeType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Internal.VisualStudio.PlatformUI.HierarchyUtilities
  commentId: T:Microsoft.Internal.VisualStudio.PlatformUI.HierarchyUtilities
  isExternal: true
- uid: DulcisX.Helpers
  commentId: N:DulcisX.Helpers
  name: DulcisX.Helpers
  nameWithType: DulcisX.Helpers
  fullName: DulcisX.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
  commentId: T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
  parent: Microsoft.VisualStudio.Shell.Interop
  isExternal: true
  name: IVsHierarchy
  nameWithType: IVsHierarchy
  fullName: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
- uid: DulcisX.Helpers.ExtendedHierarchyUtilities.IsSolutionItemsProject*
  commentId: Overload:DulcisX.Helpers.ExtendedHierarchyUtilities.IsSolutionItemsProject
  name: IsSolutionItemsProject
  nameWithType: ExtendedHierarchyUtilities.IsSolutionItemsProject
  fullName: DulcisX.Helpers.ExtendedHierarchyUtilities.IsSolutionItemsProject
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualStudio.Shell.Interop
  commentId: N:Microsoft.VisualStudio.Shell.Interop
  isExternal: true
  name: Microsoft.VisualStudio.Shell.Interop
  nameWithType: Microsoft.VisualStudio.Shell.Interop
  fullName: Microsoft.VisualStudio.Shell.Interop
- uid: DulcisX.Helpers.ExtendedHierarchyUtilities.IsMiscellaneousFilesProject*
  commentId: Overload:DulcisX.Helpers.ExtendedHierarchyUtilities.IsMiscellaneousFilesProject
  name: IsMiscellaneousFilesProject
  nameWithType: ExtendedHierarchyUtilities.IsMiscellaneousFilesProject
  fullName: DulcisX.Helpers.ExtendedHierarchyUtilities.IsMiscellaneousFilesProject
- uid: Microsoft.Internal.VisualStudio.PlatformUI.HierarchyUtilities.IsProject(Microsoft.VisualStudio.Shell.IVsHierarchyItemIdentity)
  commentId: M:Microsoft.Internal.VisualStudio.PlatformUI.HierarchyUtilities.IsProject(Microsoft.VisualStudio.Shell.IVsHierarchyItemIdentity)
  isExternal: true
- uid: DulcisX.Helpers.ExtendedHierarchyUtilities.IsRealProject*
  commentId: Overload:DulcisX.Helpers.ExtendedHierarchyUtilities.IsRealProject
  name: IsRealProject
  nameWithType: ExtendedHierarchyUtilities.IsRealProject
  fullName: DulcisX.Helpers.ExtendedHierarchyUtilities.IsRealProject
- uid: Microsoft.VisualStudio.VSConstants.CLSID
  commentId: T:Microsoft.VisualStudio.VSConstants.CLSID
  isExternal: true
- uid: DulcisX.Helpers.ExtendedHierarchyUtilities.IsNodeType*
  commentId: Overload:DulcisX.Helpers.ExtendedHierarchyUtilities.IsNodeType
  name: IsNodeType
  nameWithType: ExtendedHierarchyUtilities.IsNodeType
  fullName: DulcisX.Helpers.ExtendedHierarchyUtilities.IsNodeType
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid

### YamlMime:ManagedReference
items:
- uid: DulcisX.Nodes.SolutionFolderNode
  commentId: T:DulcisX.Nodes.SolutionFolderNode
  id: SolutionFolderNode
  parent: DulcisX.Nodes
  children:
  - DulcisX.Nodes.SolutionFolderNode.#ctor(DulcisX.Nodes.SolutionNode,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  langs:
  - csharp
  - vb
  name: SolutionFolderNode
  nameWithType: SolutionFolderNode
  fullName: DulcisX.Nodes.SolutionFolderNode
  type: Class
  source:
    remote:
      path: src/DulcisX/DulcisX/Nodes/SolutionFolderNode.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: SolutionFolderNode
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Nodes/SolutionFolderNode.cs
    startLine: 8
  assemblies:
  - DulcisX
  namespace: DulcisX.Nodes
  summary: "\nRepresents a Solution Folder within a <xref href=\"DulcisX.Nodes.SolutionNode\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class SolutionFolderNode : SolutionItemNode, INamedNode, IBaseNode, IEquatable<IBaseNode>'
    content.vb: >-
      Public Class SolutionFolderNode

          Inherits SolutionItemNode

          Implements INamedNode, IBaseNode, IEquatable(Of IBaseNode)
  inheritance:
  - System.Object
  - DulcisX.Nodes.BaseNode
  - DulcisX.Nodes.SolutionItemNode
  implements:
  - DulcisX.Nodes.INamedNode
  - DulcisX.Nodes.IBaseNode
  - System.IEquatable{DulcisX.Nodes.IBaseNode}
  inheritedMembers:
  - DulcisX.Nodes.SolutionItemNode.GetParent
  - DulcisX.Nodes.SolutionItemNode.GetChildren
  - DulcisX.Nodes.SolutionItemNode.GetAllChildrenAsync(System.Threading.CancellationToken)
  - DulcisX.Nodes.SolutionItemNode.GetAllChildrenAsync(System.Predicate{DulcisX.Nodes.BaseNode},System.Threading.CancellationToken)
  - DulcisX.Nodes.BaseNode.ParentSolution
  - DulcisX.Nodes.BaseNode.UnderlyingHierarchy
  - DulcisX.Nodes.BaseNode.ItemId
  - DulcisX.Nodes.BaseNode.GetDisplayName
  - DulcisX.Nodes.BaseNode.GetParent(DulcisX.Core.Enums.NodeTypes)
  - DulcisX.Nodes.BaseNode.AsHierarchyItem
  - DulcisX.Nodes.BaseNode.Equals(DulcisX.Nodes.IBaseNode)
  - DulcisX.Nodes.BaseNode.Equals(System.Object)
  - DulcisX.Nodes.BaseNode.GetHashCode
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DulcisX.Nodes.SolutionFolderNode.#ctor(DulcisX.Nodes.SolutionNode,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  commentId: M:DulcisX.Nodes.SolutionFolderNode.#ctor(DulcisX.Nodes.SolutionNode,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  id: '#ctor(DulcisX.Nodes.SolutionNode,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)'
  parent: DulcisX.Nodes.SolutionFolderNode
  langs:
  - csharp
  - vb
  name: SolutionFolderNode(SolutionNode, IVsHierarchy)
  nameWithType: SolutionFolderNode.SolutionFolderNode(SolutionNode, IVsHierarchy)
  fullName: DulcisX.Nodes.SolutionFolderNode.SolutionFolderNode(DulcisX.Nodes.SolutionNode, Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  type: Constructor
  source:
    remote:
      path: src/DulcisX/DulcisX/Nodes/SolutionFolderNode.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: .ctor
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Nodes/SolutionFolderNode.cs
    startLine: 15
  assemblies:
  - DulcisX
  namespace: DulcisX.Nodes
  summary: "\nInitializes a new instance of the <xref href=\"DulcisX.Nodes.SolutionFolderNode\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public SolutionFolderNode(SolutionNode solution, IVsHierarchy hierarchy)
    parameters:
    - id: solution
      type: DulcisX.Nodes.SolutionNode
      description: The Solution in which the <xref href="DulcisX.Nodes.SolutionFolderNode" data-throw-if-not-resolved="false"></xref> sits in.
    - id: hierarchy
      type: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
      description: The Hierarchy of the <xref href="DulcisX.Nodes.SolutionFolderNode" data-throw-if-not-resolved="false"></xref> itself.
    content.vb: Public Sub New(solution As SolutionNode, hierarchy As IVsHierarchy)
  overload: DulcisX.Nodes.SolutionFolderNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: DulcisX.Nodes.SolutionNode
  commentId: T:DulcisX.Nodes.SolutionNode
  parent: DulcisX.Nodes
  name: SolutionNode
  nameWithType: SolutionNode
  fullName: DulcisX.Nodes.SolutionNode
- uid: DulcisX.Nodes
  commentId: N:DulcisX.Nodes
  name: DulcisX.Nodes
  nameWithType: DulcisX.Nodes
  fullName: DulcisX.Nodes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DulcisX.Nodes.BaseNode
  commentId: T:DulcisX.Nodes.BaseNode
  parent: DulcisX.Nodes
  name: BaseNode
  nameWithType: BaseNode
  fullName: DulcisX.Nodes.BaseNode
- uid: DulcisX.Nodes.SolutionItemNode
  commentId: T:DulcisX.Nodes.SolutionItemNode
  parent: DulcisX.Nodes
  name: SolutionItemNode
  nameWithType: SolutionItemNode
  fullName: DulcisX.Nodes.SolutionItemNode
- uid: DulcisX.Nodes.INamedNode
  commentId: T:DulcisX.Nodes.INamedNode
  parent: DulcisX.Nodes
  name: INamedNode
  nameWithType: INamedNode
  fullName: DulcisX.Nodes.INamedNode
- uid: DulcisX.Nodes.IBaseNode
  commentId: T:DulcisX.Nodes.IBaseNode
  parent: DulcisX.Nodes
  name: IBaseNode
  nameWithType: IBaseNode
  fullName: DulcisX.Nodes.IBaseNode
- uid: System.IEquatable{DulcisX.Nodes.IBaseNode}
  commentId: T:System.IEquatable{DulcisX.Nodes.IBaseNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IBaseNode>
  nameWithType: IEquatable<IBaseNode>
  fullName: System.IEquatable<DulcisX.Nodes.IBaseNode>
  nameWithType.vb: IEquatable(Of IBaseNode)
  fullName.vb: System.IEquatable(Of DulcisX.Nodes.IBaseNode)
  name.vb: IEquatable(Of IBaseNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DulcisX.Nodes.IBaseNode
    name: IBaseNode
    nameWithType: IBaseNode
    fullName: DulcisX.Nodes.IBaseNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DulcisX.Nodes.IBaseNode
    name: IBaseNode
    nameWithType: IBaseNode
    fullName: DulcisX.Nodes.IBaseNode
  - name: )
    nameWithType: )
    fullName: )
- uid: DulcisX.Nodes.SolutionItemNode.GetParent
  commentId: M:DulcisX.Nodes.SolutionItemNode.GetParent
  parent: DulcisX.Nodes.SolutionItemNode
  name: GetParent()
  nameWithType: SolutionItemNode.GetParent()
  fullName: DulcisX.Nodes.SolutionItemNode.GetParent()
  spec.csharp:
  - uid: DulcisX.Nodes.SolutionItemNode.GetParent
    name: GetParent
    nameWithType: SolutionItemNode.GetParent
    fullName: DulcisX.Nodes.SolutionItemNode.GetParent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DulcisX.Nodes.SolutionItemNode.GetParent
    name: GetParent
    nameWithType: SolutionItemNode.GetParent
    fullName: DulcisX.Nodes.SolutionItemNode.GetParent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DulcisX.Nodes.SolutionItemNode.GetChildren
  commentId: M:DulcisX.Nodes.SolutionItemNode.GetChildren
  parent: DulcisX.Nodes.SolutionItemNode
  name: GetChildren()
  nameWithType: SolutionItemNode.GetChildren()
  fullName: DulcisX.Nodes.SolutionItemNode.GetChildren()
  spec.csharp:
  - uid: DulcisX.Nodes.SolutionItemNode.GetChildren
    name: GetChildren
    nameWithType: SolutionItemNode.GetChildren
    fullName: DulcisX.Nodes.SolutionItemNode.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DulcisX.Nodes.SolutionItemNode.GetChildren
    name: GetChildren
    nameWithType: SolutionItemNode.GetChildren
    fullName: DulcisX.Nodes.SolutionItemNode.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DulcisX.Nodes.SolutionItemNode.GetAllChildrenAsync(System.Threading.CancellationToken)
  commentId: M:DulcisX.Nodes.SolutionItemNode.GetAllChildrenAsync(System.Threading.CancellationToken)
  parent: DulcisX.Nodes.SolutionItemNode
  isExternal: true
  name: GetAllChildrenAsync(CancellationToken)
  nameWithType: SolutionItemNode.GetAllChildrenAsync(CancellationToken)
  fullName: DulcisX.Nodes.SolutionItemNode.GetAllChildrenAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: DulcisX.Nodes.SolutionItemNode.GetAllChildrenAsync(System.Threading.CancellationToken)
    name: GetAllChildrenAsync
    nameWithType: SolutionItemNode.GetAllChildrenAsync
    fullName: DulcisX.Nodes.SolutionItemNode.GetAllChildrenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DulcisX.Nodes.SolutionItemNode.GetAllChildrenAsync(System.Threading.CancellationToken)
    name: GetAllChildrenAsync
    nameWithType: SolutionItemNode.GetAllChildrenAsync
    fullName: DulcisX.Nodes.SolutionItemNode.GetAllChildrenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DulcisX.Nodes.SolutionItemNode.GetAllChildrenAsync(System.Predicate{DulcisX.Nodes.BaseNode},System.Threading.CancellationToken)
  commentId: M:DulcisX.Nodes.SolutionItemNode.GetAllChildrenAsync(System.Predicate{DulcisX.Nodes.BaseNode},System.Threading.CancellationToken)
  parent: DulcisX.Nodes.SolutionItemNode
  isExternal: true
  name: GetAllChildrenAsync(Predicate<BaseNode>, CancellationToken)
  nameWithType: SolutionItemNode.GetAllChildrenAsync(Predicate<BaseNode>, CancellationToken)
  fullName: DulcisX.Nodes.SolutionItemNode.GetAllChildrenAsync(System.Predicate<DulcisX.Nodes.BaseNode>, System.Threading.CancellationToken)
  nameWithType.vb: SolutionItemNode.GetAllChildrenAsync(Predicate(Of BaseNode), CancellationToken)
  fullName.vb: DulcisX.Nodes.SolutionItemNode.GetAllChildrenAsync(System.Predicate(Of DulcisX.Nodes.BaseNode), System.Threading.CancellationToken)
  name.vb: GetAllChildrenAsync(Predicate(Of BaseNode), CancellationToken)
  spec.csharp:
  - uid: DulcisX.Nodes.SolutionItemNode.GetAllChildrenAsync(System.Predicate{DulcisX.Nodes.BaseNode},System.Threading.CancellationToken)
    name: GetAllChildrenAsync
    nameWithType: SolutionItemNode.GetAllChildrenAsync
    fullName: DulcisX.Nodes.SolutionItemNode.GetAllChildrenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DulcisX.Nodes.BaseNode
    name: BaseNode
    nameWithType: BaseNode
    fullName: DulcisX.Nodes.BaseNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DulcisX.Nodes.SolutionItemNode.GetAllChildrenAsync(System.Predicate{DulcisX.Nodes.BaseNode},System.Threading.CancellationToken)
    name: GetAllChildrenAsync
    nameWithType: SolutionItemNode.GetAllChildrenAsync
    fullName: DulcisX.Nodes.SolutionItemNode.GetAllChildrenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DulcisX.Nodes.BaseNode
    name: BaseNode
    nameWithType: BaseNode
    fullName: DulcisX.Nodes.BaseNode
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DulcisX.Nodes.BaseNode.ParentSolution
  commentId: P:DulcisX.Nodes.BaseNode.ParentSolution
  parent: DulcisX.Nodes.BaseNode
  name: ParentSolution
  nameWithType: BaseNode.ParentSolution
  fullName: DulcisX.Nodes.BaseNode.ParentSolution
- uid: DulcisX.Nodes.BaseNode.UnderlyingHierarchy
  commentId: P:DulcisX.Nodes.BaseNode.UnderlyingHierarchy
  parent: DulcisX.Nodes.BaseNode
  name: UnderlyingHierarchy
  nameWithType: BaseNode.UnderlyingHierarchy
  fullName: DulcisX.Nodes.BaseNode.UnderlyingHierarchy
- uid: DulcisX.Nodes.BaseNode.ItemId
  commentId: P:DulcisX.Nodes.BaseNode.ItemId
  parent: DulcisX.Nodes.BaseNode
  name: ItemId
  nameWithType: BaseNode.ItemId
  fullName: DulcisX.Nodes.BaseNode.ItemId
- uid: DulcisX.Nodes.BaseNode.GetDisplayName
  commentId: M:DulcisX.Nodes.BaseNode.GetDisplayName
  parent: DulcisX.Nodes.BaseNode
  name: GetDisplayName()
  nameWithType: BaseNode.GetDisplayName()
  fullName: DulcisX.Nodes.BaseNode.GetDisplayName()
  spec.csharp:
  - uid: DulcisX.Nodes.BaseNode.GetDisplayName
    name: GetDisplayName
    nameWithType: BaseNode.GetDisplayName
    fullName: DulcisX.Nodes.BaseNode.GetDisplayName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DulcisX.Nodes.BaseNode.GetDisplayName
    name: GetDisplayName
    nameWithType: BaseNode.GetDisplayName
    fullName: DulcisX.Nodes.BaseNode.GetDisplayName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DulcisX.Nodes.BaseNode.GetParent(DulcisX.Core.Enums.NodeTypes)
  commentId: M:DulcisX.Nodes.BaseNode.GetParent(DulcisX.Core.Enums.NodeTypes)
  parent: DulcisX.Nodes.BaseNode
  name: GetParent(NodeTypes)
  nameWithType: BaseNode.GetParent(NodeTypes)
  fullName: DulcisX.Nodes.BaseNode.GetParent(DulcisX.Core.Enums.NodeTypes)
  spec.csharp:
  - uid: DulcisX.Nodes.BaseNode.GetParent(DulcisX.Core.Enums.NodeTypes)
    name: GetParent
    nameWithType: BaseNode.GetParent
    fullName: DulcisX.Nodes.BaseNode.GetParent
  - name: (
    nameWithType: (
    fullName: (
  - uid: DulcisX.Core.Enums.NodeTypes
    name: NodeTypes
    nameWithType: NodeTypes
    fullName: DulcisX.Core.Enums.NodeTypes
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DulcisX.Nodes.BaseNode.GetParent(DulcisX.Core.Enums.NodeTypes)
    name: GetParent
    nameWithType: BaseNode.GetParent
    fullName: DulcisX.Nodes.BaseNode.GetParent
  - name: (
    nameWithType: (
    fullName: (
  - uid: DulcisX.Core.Enums.NodeTypes
    name: NodeTypes
    nameWithType: NodeTypes
    fullName: DulcisX.Core.Enums.NodeTypes
  - name: )
    nameWithType: )
    fullName: )
- uid: DulcisX.Nodes.BaseNode.AsHierarchyItem
  commentId: M:DulcisX.Nodes.BaseNode.AsHierarchyItem
  parent: DulcisX.Nodes.BaseNode
  name: AsHierarchyItem()
  nameWithType: BaseNode.AsHierarchyItem()
  fullName: DulcisX.Nodes.BaseNode.AsHierarchyItem()
  spec.csharp:
  - uid: DulcisX.Nodes.BaseNode.AsHierarchyItem
    name: AsHierarchyItem
    nameWithType: BaseNode.AsHierarchyItem
    fullName: DulcisX.Nodes.BaseNode.AsHierarchyItem
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DulcisX.Nodes.BaseNode.AsHierarchyItem
    name: AsHierarchyItem
    nameWithType: BaseNode.AsHierarchyItem
    fullName: DulcisX.Nodes.BaseNode.AsHierarchyItem
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DulcisX.Nodes.BaseNode.Equals(DulcisX.Nodes.IBaseNode)
  commentId: M:DulcisX.Nodes.BaseNode.Equals(DulcisX.Nodes.IBaseNode)
  parent: DulcisX.Nodes.BaseNode
  name: Equals(IBaseNode)
  nameWithType: BaseNode.Equals(IBaseNode)
  fullName: DulcisX.Nodes.BaseNode.Equals(DulcisX.Nodes.IBaseNode)
  spec.csharp:
  - uid: DulcisX.Nodes.BaseNode.Equals(DulcisX.Nodes.IBaseNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: DulcisX.Nodes.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: DulcisX.Nodes.IBaseNode
    name: IBaseNode
    nameWithType: IBaseNode
    fullName: DulcisX.Nodes.IBaseNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DulcisX.Nodes.BaseNode.Equals(DulcisX.Nodes.IBaseNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: DulcisX.Nodes.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: DulcisX.Nodes.IBaseNode
    name: IBaseNode
    nameWithType: IBaseNode
    fullName: DulcisX.Nodes.IBaseNode
  - name: )
    nameWithType: )
    fullName: )
- uid: DulcisX.Nodes.BaseNode.Equals(System.Object)
  commentId: M:DulcisX.Nodes.BaseNode.Equals(System.Object)
  parent: DulcisX.Nodes.BaseNode
  isExternal: true
  name: Equals(Object)
  nameWithType: BaseNode.Equals(Object)
  fullName: DulcisX.Nodes.BaseNode.Equals(System.Object)
  spec.csharp:
  - uid: DulcisX.Nodes.BaseNode.Equals(System.Object)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: DulcisX.Nodes.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DulcisX.Nodes.BaseNode.Equals(System.Object)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: DulcisX.Nodes.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DulcisX.Nodes.BaseNode.GetHashCode
  commentId: M:DulcisX.Nodes.BaseNode.GetHashCode
  parent: DulcisX.Nodes.BaseNode
  name: GetHashCode()
  nameWithType: BaseNode.GetHashCode()
  fullName: DulcisX.Nodes.BaseNode.GetHashCode()
  spec.csharp:
  - uid: DulcisX.Nodes.BaseNode.GetHashCode
    name: GetHashCode
    nameWithType: BaseNode.GetHashCode
    fullName: DulcisX.Nodes.BaseNode.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DulcisX.Nodes.BaseNode.GetHashCode
    name: GetHashCode
    nameWithType: BaseNode.GetHashCode
    fullName: DulcisX.Nodes.BaseNode.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DulcisX.Nodes.SolutionFolderNode
  commentId: T:DulcisX.Nodes.SolutionFolderNode
  name: SolutionFolderNode
  nameWithType: SolutionFolderNode
  fullName: DulcisX.Nodes.SolutionFolderNode
- uid: DulcisX.Nodes.SolutionFolderNode.#ctor*
  commentId: Overload:DulcisX.Nodes.SolutionFolderNode.#ctor
  name: SolutionFolderNode
  nameWithType: SolutionFolderNode.SolutionFolderNode
  fullName: DulcisX.Nodes.SolutionFolderNode.SolutionFolderNode
- uid: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
  commentId: T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
  parent: Microsoft.VisualStudio.Shell.Interop
  isExternal: true
  name: IVsHierarchy
  nameWithType: IVsHierarchy
  fullName: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
- uid: Microsoft.VisualStudio.Shell.Interop
  commentId: N:Microsoft.VisualStudio.Shell.Interop
  isExternal: true
  name: Microsoft.VisualStudio.Shell.Interop
  nameWithType: Microsoft.VisualStudio.Shell.Interop
  fullName: Microsoft.VisualStudio.Shell.Interop

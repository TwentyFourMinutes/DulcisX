### YamlMime:ManagedReference
items:
- uid: DulcisX.Core.Extensions.VsHierarchyExtensions
  commentId: T:DulcisX.Core.Extensions.VsHierarchyExtensions
  id: VsHierarchyExtensions
  parent: DulcisX.Core.Extensions
  children:
  - DulcisX.Core.Extensions.VsHierarchyExtensions.GetProperty(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32)
  - DulcisX.Core.Extensions.VsHierarchyExtensions.GetProperty``1(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32)
  - DulcisX.Core.Extensions.VsHierarchyExtensions.GetPropertyObject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32)
  - DulcisX.Core.Extensions.VsHierarchyExtensions.IsContainer(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32)
  - DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetNestedHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@)
  - DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetParentHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@)
  - DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetProperty(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32,System.UInt32@)
  - DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetProperty``1(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32,``0@)
  - DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetPropertyObject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32,System.Object@)
  - DulcisX.Core.Extensions.VsHierarchyExtensions.TrySetProperty(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32,System.Object)
  langs:
  - csharp
  - vb
  name: VsHierarchyExtensions
  nameWithType: VsHierarchyExtensions
  fullName: DulcisX.Core.Extensions.VsHierarchyExtensions
  type: Class
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: VsHierarchyExtensions
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
    startLine: 12
  assemblies:
  - DulcisX
  namespace: DulcisX.Core.Extensions
  summary: "\n<xref href=\"Microsoft.VisualStudio.Shell.Interop.IVsHierarchy\" data-throw-if-not-resolved=\"false\"></xref> specific Extensions.\n"
  example: []
  syntax:
    content: public static class VsHierarchyExtensions
    content.vb: Public Module VsHierarchyExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetParentHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@)
  commentId: M:DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetParentHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@)
  id: TryGetParentHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@)
  isExtensionMethod: true
  parent: DulcisX.Core.Extensions.VsHierarchyExtensions
  langs:
  - csharp
  - vb
  name: TryGetParentHierarchy(IVsHierarchy, out IVsHierarchy)
  nameWithType: VsHierarchyExtensions.TryGetParentHierarchy(IVsHierarchy, out IVsHierarchy)
  fullName: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetParentHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy, out Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: TryGetParentHierarchy
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
    startLine: 20
  assemblies:
  - DulcisX
  namespace: DulcisX.Core.Extensions
  summary: "\nGets the parent <xref href=\"Microsoft.VisualStudio.Shell.Interop.IVsHierarchy\" data-throw-if-not-resolved=\"false\"></xref> of an <xref href=\"Microsoft.VisualStudio.Shell.Interop.IVsHierarchy\" data-throw-if-not-resolved=\"false\"></xref>. A return value indicates whether the operation succeeded.\n"
  example: []
  syntax:
    content: public static bool TryGetParentHierarchy(this IVsHierarchy hierarchy, out IVsHierarchy parentHierarchy)
    parameters:
    - id: hierarchy
      type: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
      description: The <xref href="Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" data-throw-if-not-resolved="false"></xref> of the which the parent should be retrieved.
    - id: parentHierarchy
      type: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
      description: The parent <xref href="Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if the operation returned a result; otherwise <xref uid="langword_csharp_false" name="false" href=""></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryGetParentHierarchy(hierarchy As IVsHierarchy, ByRef parentHierarchy As IVsHierarchy) As Boolean
  overload: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetParentHierarchy*
  nameWithType.vb: VsHierarchyExtensions.TryGetParentHierarchy(IVsHierarchy, ByRef IVsHierarchy)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetParentHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy, ByRef Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  name.vb: TryGetParentHierarchy(IVsHierarchy, ByRef IVsHierarchy)
- uid: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetNestedHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@)
  commentId: M:DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetNestedHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@)
  id: TryGetNestedHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@)
  isExtensionMethod: true
  parent: DulcisX.Core.Extensions.VsHierarchyExtensions
  langs:
  - csharp
  - vb
  name: TryGetNestedHierarchy(IVsHierarchy, UInt32, out IVsHierarchy)
  nameWithType: VsHierarchyExtensions.TryGetNestedHierarchy(IVsHierarchy, UInt32, out IVsHierarchy)
  fullName: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetNestedHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy, System.UInt32, out Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: TryGetNestedHierarchy
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
    startLine: 30
  assemblies:
  - DulcisX
  namespace: DulcisX.Core.Extensions
  summary: "\nGets the nested <xref href=\"Microsoft.VisualStudio.Shell.Interop.IVsHierarchy\" data-throw-if-not-resolved=\"false\"></xref> of an <xref href=\"Microsoft.VisualStudio.Shell.Interop.IVsHierarchy\" data-throw-if-not-resolved=\"false\"></xref>. A return value indicates whether the operation succeeded.\n"
  example: []
  syntax:
    content: public static bool TryGetNestedHierarchy(this IVsHierarchy hierarchy, uint itemId, out IVsHierarchy nestedHierarchy)
    parameters:
    - id: hierarchy
      type: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
      description: The <xref href="Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" data-throw-if-not-resolved="false"></xref> of the which the child should be retrieved.
    - id: itemId
      type: System.UInt32
      description: The identifier for the node of which the child should be retrieved.
    - id: nestedHierarchy
      type: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
      description: The chil <xref href="Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if the operation suceeded a result; otherwise <xref uid="langword_csharp_false" name="false" href=""></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryGetNestedHierarchy(hierarchy As IVsHierarchy, itemId As UInteger, ByRef nestedHierarchy As IVsHierarchy) As Boolean
  overload: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetNestedHierarchy*
  nameWithType.vb: VsHierarchyExtensions.TryGetNestedHierarchy(IVsHierarchy, UInt32, ByRef IVsHierarchy)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetNestedHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy, System.UInt32, ByRef Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)
  name.vb: TryGetNestedHierarchy(IVsHierarchy, UInt32, ByRef IVsHierarchy)
- uid: DulcisX.Core.Extensions.VsHierarchyExtensions.IsContainer(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32)
  commentId: M:DulcisX.Core.Extensions.VsHierarchyExtensions.IsContainer(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32)
  id: IsContainer(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32)
  isExtensionMethod: true
  parent: DulcisX.Core.Extensions.VsHierarchyExtensions
  langs:
  - csharp
  - vb
  name: IsContainer(IVsHierarchy, UInt32)
  nameWithType: VsHierarchyExtensions.IsContainer(IVsHierarchy, UInt32)
  fullName: DulcisX.Core.Extensions.VsHierarchyExtensions.IsContainer(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy, System.UInt32)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: IsContainer
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
    startLine: 57
  assemblies:
  - DulcisX
  namespace: DulcisX.Core.Extensions
  summary: "\nGets a value indicating whether a node is a container.\n"
  example: []
  syntax:
    content: public static bool IsContainer(this IVsHierarchy hierarchy, uint itemId)
    parameters:
    - id: hierarchy
      type: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
      description: The <xref href="Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" data-throw-if-not-resolved="false"></xref> of the node.
    - id: itemId
      type: System.UInt32
      description: The identifier for the node.
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if the node is a container; otherwise <xref uid="langword_csharp_false" name="false" href=""></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsContainer(hierarchy As IVsHierarchy, itemId As UInteger) As Boolean
  overload: DulcisX.Core.Extensions.VsHierarchyExtensions.IsContainer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DulcisX.Core.Extensions.VsHierarchyExtensions.GetProperty(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32)
  commentId: M:DulcisX.Core.Extensions.VsHierarchyExtensions.GetProperty(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32)
  id: GetProperty(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32)
  isExtensionMethod: true
  parent: DulcisX.Core.Extensions.VsHierarchyExtensions
  langs:
  - csharp
  - vb
  name: GetProperty(IVsHierarchy, UInt32, Int32)
  nameWithType: VsHierarchyExtensions.GetProperty(IVsHierarchy, UInt32, Int32)
  fullName: DulcisX.Core.Extensions.VsHierarchyExtensions.GetProperty(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy, System.UInt32, System.Int32)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: GetProperty
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
    startLine: 77
  assemblies:
  - DulcisX
  namespace: DulcisX.Core.Extensions
  summary: "\nGets a property of a node.\n"
  example: []
  syntax:
    content: public static uint GetProperty(this IVsHierarchy hierarchy, uint itemId, int propId)
    parameters:
    - id: hierarchy
      type: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
      description: The <xref href="Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" data-throw-if-not-resolved="false"></xref> of the node.
    - id: itemId
      type: System.UInt32
      description: The identifier for the node.
    - id: propId
      type: System.Int32
      description: The property of which the value should be returned.
    return:
      type: System.UInt32
      description: A value containing the property.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetProperty(hierarchy As IVsHierarchy, itemId As UInteger, propId As Integer) As UInteger
  overload: DulcisX.Core.Extensions.VsHierarchyExtensions.GetProperty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DulcisX.Core.Extensions.VsHierarchyExtensions.GetProperty``1(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32)
  commentId: M:DulcisX.Core.Extensions.VsHierarchyExtensions.GetProperty``1(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32)
  id: GetProperty``1(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32)
  isExtensionMethod: true
  parent: DulcisX.Core.Extensions.VsHierarchyExtensions
  langs:
  - csharp
  - vb
  name: GetProperty<TType>(IVsHierarchy, UInt32, Int32)
  nameWithType: VsHierarchyExtensions.GetProperty<TType>(IVsHierarchy, UInt32, Int32)
  fullName: DulcisX.Core.Extensions.VsHierarchyExtensions.GetProperty<TType>(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy, System.UInt32, System.Int32)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: GetProperty
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
    startLine: 96
  assemblies:
  - DulcisX
  namespace: DulcisX.Core.Extensions
  summary: "\nGets a property of a node.\n"
  example: []
  syntax:
    content: public static TType GetProperty<TType>(this IVsHierarchy hierarchy, uint itemId, int propId)
    parameters:
    - id: hierarchy
      type: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
      description: The <xref href="Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" data-throw-if-not-resolved="false"></xref> of the node.
    - id: itemId
      type: System.UInt32
      description: The identifier for the node.
    - id: propId
      type: System.Int32
      description: The property of which the value should be returned.
    typeParameters:
    - id: TType
      description: The type to which the value of the property should be casted to.
    return:
      type: '{TType}'
      description: A value containing the property.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetProperty(Of TType)(hierarchy As IVsHierarchy, itemId As UInteger, propId As Integer) As TType
  overload: DulcisX.Core.Extensions.VsHierarchyExtensions.GetProperty*
  nameWithType.vb: VsHierarchyExtensions.GetProperty(Of TType)(IVsHierarchy, UInt32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DulcisX.Core.Extensions.VsHierarchyExtensions.GetProperty(Of TType)(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy, System.UInt32, System.Int32)
  name.vb: GetProperty(Of TType)(IVsHierarchy, UInt32, Int32)
- uid: DulcisX.Core.Extensions.VsHierarchyExtensions.GetPropertyObject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32)
  commentId: M:DulcisX.Core.Extensions.VsHierarchyExtensions.GetPropertyObject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32)
  id: GetPropertyObject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32)
  isExtensionMethod: true
  parent: DulcisX.Core.Extensions.VsHierarchyExtensions
  langs:
  - csharp
  - vb
  name: GetPropertyObject(IVsHierarchy, UInt32, Int32)
  nameWithType: VsHierarchyExtensions.GetPropertyObject(IVsHierarchy, UInt32, Int32)
  fullName: DulcisX.Core.Extensions.VsHierarchyExtensions.GetPropertyObject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy, System.UInt32, System.Int32)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: GetPropertyObject
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
    startLine: 114
  assemblies:
  - DulcisX
  namespace: DulcisX.Core.Extensions
  summary: "\nGets a property of a node.\n"
  example: []
  syntax:
    content: public static object GetPropertyObject(this IVsHierarchy hierarchy, uint itemId, int propId)
    parameters:
    - id: hierarchy
      type: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
      description: The <xref href="Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" data-throw-if-not-resolved="false"></xref> of the node.
    - id: itemId
      type: System.UInt32
      description: The identifier for the node.
    - id: propId
      type: System.Int32
      description: The property of which the value should be returned.
    return:
      type: System.Object
      description: A value boxed in an object containing the property.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetPropertyObject(hierarchy As IVsHierarchy, itemId As UInteger, propId As Integer) As Object
  overload: DulcisX.Core.Extensions.VsHierarchyExtensions.GetPropertyObject*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetProperty(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32,System.UInt32@)
  commentId: M:DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetProperty(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32,System.UInt32@)
  id: TryGetProperty(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32,System.UInt32@)
  isExtensionMethod: true
  parent: DulcisX.Core.Extensions.VsHierarchyExtensions
  langs:
  - csharp
  - vb
  name: TryGetProperty(IVsHierarchy, UInt32, Int32, out UInt32)
  nameWithType: VsHierarchyExtensions.TryGetProperty(IVsHierarchy, UInt32, Int32, out UInt32)
  fullName: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetProperty(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy, System.UInt32, System.Int32, out System.UInt32)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: TryGetProperty
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
    startLine: 133
  assemblies:
  - DulcisX
  namespace: DulcisX.Core.Extensions
  summary: "\nGets a property of a node. A return value indicates whether the operation succeeded.\n"
  example: []
  syntax:
    content: public static bool TryGetProperty(this IVsHierarchy hierarchy, uint itemId, int propId, out uint value)
    parameters:
    - id: hierarchy
      type: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
      description: The <xref href="Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" data-throw-if-not-resolved="false"></xref> of the node.
    - id: itemId
      type: System.UInt32
      description: The identifier for the node.
    - id: propId
      type: System.Int32
      description: The property of which the value should be returned.
    - id: value
      type: System.UInt32
      description: The value of the property.
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if the operation returned a result; otherwise <xref uid="langword_csharp_false" name="false" href=""></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryGetProperty(hierarchy As IVsHierarchy, itemId As UInteger, propId As Integer, ByRef value As UInteger) As Boolean
  overload: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetProperty*
  nameWithType.vb: VsHierarchyExtensions.TryGetProperty(IVsHierarchy, UInt32, Int32, ByRef UInt32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetProperty(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy, System.UInt32, System.Int32, ByRef System.UInt32)
  name.vb: TryGetProperty(IVsHierarchy, UInt32, Int32, ByRef UInt32)
- uid: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetProperty``1(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32,``0@)
  commentId: M:DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetProperty``1(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32,``0@)
  id: TryGetProperty``1(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32,``0@)
  isExtensionMethod: true
  parent: DulcisX.Core.Extensions.VsHierarchyExtensions
  langs:
  - csharp
  - vb
  name: TryGetProperty<TType>(IVsHierarchy, UInt32, Int32, out TType)
  nameWithType: VsHierarchyExtensions.TryGetProperty<TType>(IVsHierarchy, UInt32, Int32, out TType)
  fullName: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetProperty<TType>(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy, System.UInt32, System.Int32, out TType)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: TryGetProperty
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
    startLine: 159
  assemblies:
  - DulcisX
  namespace: DulcisX.Core.Extensions
  summary: "\nGets a property of a node. A return value indicates whether the operation succeeded.\n"
  example: []
  syntax:
    content: public static bool TryGetProperty<TType>(this IVsHierarchy hierarchy, uint itemId, int propId, out TType value)
    parameters:
    - id: hierarchy
      type: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
      description: The <xref href="Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" data-throw-if-not-resolved="false"></xref> of the node.
    - id: itemId
      type: System.UInt32
      description: The identifier for the node.
    - id: propId
      type: System.Int32
      description: The property of which the value should be returned.
    - id: value
      type: '{TType}'
      description: The value of the property.
    typeParameters:
    - id: TType
      description: The type to which the value of the property should be casted to.
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if the operation returned a result; otherwise <xref uid="langword_csharp_false" name="false" href=""></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryGetProperty(Of TType)(hierarchy As IVsHierarchy, itemId As UInteger, propId As Integer, ByRef value As TType) As Boolean
  overload: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetProperty*
  nameWithType.vb: VsHierarchyExtensions.TryGetProperty(Of TType)(IVsHierarchy, UInt32, Int32, ByRef TType)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetProperty(Of TType)(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy, System.UInt32, System.Int32, ByRef TType)
  name.vb: TryGetProperty(Of TType)(IVsHierarchy, UInt32, Int32, ByRef TType)
- uid: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetPropertyObject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32,System.Object@)
  commentId: M:DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetPropertyObject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32,System.Object@)
  id: TryGetPropertyObject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32,System.Object@)
  isExtensionMethod: true
  parent: DulcisX.Core.Extensions.VsHierarchyExtensions
  langs:
  - csharp
  - vb
  name: TryGetPropertyObject(IVsHierarchy, UInt32, Int32, out Object)
  nameWithType: VsHierarchyExtensions.TryGetPropertyObject(IVsHierarchy, UInt32, Int32, out Object)
  fullName: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetPropertyObject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy, System.UInt32, System.Int32, out System.Object)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: TryGetPropertyObject
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
    startLine: 184
  assemblies:
  - DulcisX
  namespace: DulcisX.Core.Extensions
  summary: "\nGets a property of a node. A return value indicates whether the operation succeeded.\n"
  example: []
  syntax:
    content: public static bool TryGetPropertyObject(this IVsHierarchy hierarchy, uint itemId, int propId, out object value)
    parameters:
    - id: hierarchy
      type: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
      description: The <xref href="Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" data-throw-if-not-resolved="false"></xref> of the node.
    - id: itemId
      type: System.UInt32
      description: The identifier for the node.
    - id: propId
      type: System.Int32
      description: The property of which the value should be returned.
    - id: value
      type: System.Object
      description: The value of the property boxed in an object.
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if the operation returned a result; otherwise <xref uid="langword_csharp_false" name="false" href=""></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryGetPropertyObject(hierarchy As IVsHierarchy, itemId As UInteger, propId As Integer, ByRef value As Object) As Boolean
  overload: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetPropertyObject*
  nameWithType.vb: VsHierarchyExtensions.TryGetPropertyObject(IVsHierarchy, UInt32, Int32, ByRef Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetPropertyObject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy, System.UInt32, System.Int32, ByRef System.Object)
  name.vb: TryGetPropertyObject(IVsHierarchy, UInt32, Int32, ByRef Object)
- uid: DulcisX.Core.Extensions.VsHierarchyExtensions.TrySetProperty(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32,System.Object)
  commentId: M:DulcisX.Core.Extensions.VsHierarchyExtensions.TrySetProperty(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32,System.Object)
  id: TrySetProperty(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32,System.Object)
  isExtensionMethod: true
  parent: DulcisX.Core.Extensions.VsHierarchyExtensions
  langs:
  - csharp
  - vb
  name: TrySetProperty(IVsHierarchy, UInt32, Int32, Object)
  nameWithType: VsHierarchyExtensions.TrySetProperty(IVsHierarchy, UInt32, Int32, Object)
  fullName: DulcisX.Core.Extensions.VsHierarchyExtensions.TrySetProperty(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy, System.UInt32, System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: TrySetProperty
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/Extensions/VsHierarchyExtensions.cs
    startLine: 201
  assemblies:
  - DulcisX
  namespace: DulcisX.Core.Extensions
  summary: "\nSets a property of a node. A return value indicates whether the operation succeeded.\n"
  example: []
  syntax:
    content: public static bool TrySetProperty(this IVsHierarchy hierarchy, uint itemId, int propId, object value)
    parameters:
    - id: hierarchy
      type: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
      description: The <xref href="Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" data-throw-if-not-resolved="false"></xref> of the node.
    - id: itemId
      type: System.UInt32
      description: The identifier for the node.
    - id: propId
      type: System.Int32
      description: The property of which the value should be returned.
    - id: value
      type: System.Object
      description: The value which should be set as the new value of the property.
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if the operation returned a result; otherwise <xref uid="langword_csharp_false" name="false" href=""></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TrySetProperty(hierarchy As IVsHierarchy, itemId As UInteger, propId As Integer, value As Object) As Boolean
  overload: DulcisX.Core.Extensions.VsHierarchyExtensions.TrySetProperty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
  commentId: T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
  parent: Microsoft.VisualStudio.Shell.Interop
  isExternal: true
  name: IVsHierarchy
  nameWithType: IVsHierarchy
  fullName: Microsoft.VisualStudio.Shell.Interop.IVsHierarchy
- uid: DulcisX.Core.Extensions
  commentId: N:DulcisX.Core.Extensions
  name: DulcisX.Core.Extensions
  nameWithType: DulcisX.Core.Extensions
  fullName: DulcisX.Core.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.VisualStudio.Shell.Interop
  commentId: N:Microsoft.VisualStudio.Shell.Interop
  isExternal: true
  name: Microsoft.VisualStudio.Shell.Interop
  nameWithType: Microsoft.VisualStudio.Shell.Interop
  fullName: Microsoft.VisualStudio.Shell.Interop
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetParentHierarchy*
  commentId: Overload:DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetParentHierarchy
  name: TryGetParentHierarchy
  nameWithType: VsHierarchyExtensions.TryGetParentHierarchy
  fullName: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetParentHierarchy
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetNestedHierarchy*
  commentId: Overload:DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetNestedHierarchy
  name: TryGetNestedHierarchy
  nameWithType: VsHierarchyExtensions.TryGetNestedHierarchy
  fullName: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetNestedHierarchy
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: DulcisX.Core.Extensions.VsHierarchyExtensions.IsContainer*
  commentId: Overload:DulcisX.Core.Extensions.VsHierarchyExtensions.IsContainer
  name: IsContainer
  nameWithType: VsHierarchyExtensions.IsContainer
  fullName: DulcisX.Core.Extensions.VsHierarchyExtensions.IsContainer
- uid: DulcisX.Core.Extensions.VsHierarchyExtensions.GetProperty*
  commentId: Overload:DulcisX.Core.Extensions.VsHierarchyExtensions.GetProperty
  name: GetProperty
  nameWithType: VsHierarchyExtensions.GetProperty
  fullName: DulcisX.Core.Extensions.VsHierarchyExtensions.GetProperty
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: '{TType}'
  commentId: '!:TType'
  definition: TType
  name: TType
  nameWithType: TType
  fullName: TType
- uid: TType
  name: TType
  nameWithType: TType
  fullName: TType
- uid: DulcisX.Core.Extensions.VsHierarchyExtensions.GetPropertyObject*
  commentId: Overload:DulcisX.Core.Extensions.VsHierarchyExtensions.GetPropertyObject
  name: GetPropertyObject
  nameWithType: VsHierarchyExtensions.GetPropertyObject
  fullName: DulcisX.Core.Extensions.VsHierarchyExtensions.GetPropertyObject
- uid: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetProperty*
  commentId: Overload:DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetProperty
  name: TryGetProperty
  nameWithType: VsHierarchyExtensions.TryGetProperty
  fullName: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetProperty
- uid: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetPropertyObject*
  commentId: Overload:DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetPropertyObject
  name: TryGetPropertyObject
  nameWithType: VsHierarchyExtensions.TryGetPropertyObject
  fullName: DulcisX.Core.Extensions.VsHierarchyExtensions.TryGetPropertyObject
- uid: DulcisX.Core.Extensions.VsHierarchyExtensions.TrySetProperty*
  commentId: Overload:DulcisX.Core.Extensions.VsHierarchyExtensions.TrySetProperty
  name: TrySetProperty
  nameWithType: VsHierarchyExtensions.TrySetProperty
  fullName: DulcisX.Core.Extensions.VsHierarchyExtensions.TrySetProperty

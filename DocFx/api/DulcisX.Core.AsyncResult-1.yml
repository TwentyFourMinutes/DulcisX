### YamlMime:ManagedReference
items:
- uid: DulcisX.Core.AsyncResult`1
  commentId: T:DulcisX.Core.AsyncResult`1
  id: AsyncResult`1
  parent: DulcisX.Core
  children:
  - DulcisX.Core.AsyncResult`1.TryGetResult(`0@)
  langs:
  - csharp
  - vb
  name: AsyncResult<TResult>
  nameWithType: AsyncResult<TResult>
  fullName: DulcisX.Core.AsyncResult<TResult>
  type: Class
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/AsyncResult.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: AsyncResult
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/AsyncResult.cs
    startLine: 6
  assemblies:
  - DulcisX
  namespace: DulcisX.Core
  summary: "\nContains the result of an asynchronous operation.\n"
  example: []
  syntax:
    content: public class AsyncResult<TResult>
    typeParameters:
    - id: TResult
      description: The type of the result.
    content.vb: Public Class AsyncResult(Of TResult)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: AsyncResult(Of TResult)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: DulcisX.Core.AsyncResult(Of TResult)
  name.vb: AsyncResult(Of TResult)
- uid: DulcisX.Core.AsyncResult`1.TryGetResult(`0@)
  commentId: M:DulcisX.Core.AsyncResult`1.TryGetResult(`0@)
  id: TryGetResult(`0@)
  parent: DulcisX.Core.AsyncResult`1
  langs:
  - csharp
  - vb
  name: TryGetResult(out TResult)
  nameWithType: AsyncResult<TResult>.TryGetResult(out TResult)
  fullName: DulcisX.Core.AsyncResult<TResult>.TryGetResult(out TResult)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/AsyncResult.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: TryGetResult
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/AsyncResult.cs
    startLine: 22
  assemblies:
  - DulcisX
  namespace: DulcisX.Core
  summary: "\nGets the result of the asynchronous operation. A return value indicates whether the operation succeeded.\n"
  example: []
  syntax:
    content: public bool TryGetResult(out TResult result)
    parameters:
    - id: result
      type: '{TResult}'
      description: The result of the operation.
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if the operation returned a result; otherwise <xref uid="langword_csharp_false" name="false" href=""></xref>.
    content.vb: Public Function TryGetResult(ByRef result As TResult) As Boolean
  overload: DulcisX.Core.AsyncResult`1.TryGetResult*
  nameWithType.vb: AsyncResult(Of TResult).TryGetResult(ByRef TResult)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DulcisX.Core.AsyncResult(Of TResult).TryGetResult(ByRef TResult)
  name.vb: TryGetResult(ByRef TResult)
references:
- uid: DulcisX.Core
  commentId: N:DulcisX.Core
  name: DulcisX.Core
  nameWithType: DulcisX.Core
  fullName: DulcisX.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DulcisX.Core.AsyncResult`1.TryGetResult*
  commentId: Overload:DulcisX.Core.AsyncResult`1.TryGetResult
  name: TryGetResult
  nameWithType: AsyncResult<TResult>.TryGetResult
  fullName: DulcisX.Core.AsyncResult<TResult>.TryGetResult
  nameWithType.vb: AsyncResult(Of TResult).TryGetResult
  fullName.vb: DulcisX.Core.AsyncResult(Of TResult).TryGetResult
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TResult
  commentId: '!:TResult'
  name: TResult
  nameWithType: TResult
  fullName: TResult

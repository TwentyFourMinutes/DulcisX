### YamlMime:ManagedReference
items:
- uid: DulcisX.Nodes.Events.ISolutionBuildEvents
  commentId: T:DulcisX.Nodes.Events.ISolutionBuildEvents
  id: ISolutionBuildEvents
  parent: DulcisX.Nodes.Events
  children:
  - DulcisX.Nodes.Events.ISolutionBuildEvents.OnProjectConfigurationChanged
  - DulcisX.Nodes.Events.ISolutionBuildEvents.OnProjectsConfigurationBuild
  - DulcisX.Nodes.Events.ISolutionBuildEvents.OnSolutionBuild
  - DulcisX.Nodes.Events.ISolutionBuildEvents.OnSolutionBuildCancel
  - DulcisX.Nodes.Events.ISolutionBuildEvents.OnSolutionBuilt
  langs:
  - csharp
  - vb
  name: ISolutionBuildEvents
  nameWithType: ISolutionBuildEvents
  fullName: DulcisX.Nodes.Events.ISolutionBuildEvents
  type: Interface
  source:
    remote:
      path: src/DulcisX/DulcisX/Nodes/Events/ISolutionBuildEvents.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: ISolutionBuildEvents
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Nodes/Events/ISolutionBuildEvents.cs
    startLine: 7
  assemblies:
  - DulcisX
  namespace: DulcisX.Nodes.Events
  summary: "\nProvides events, which occur on build changes in a <xref href=\"DulcisX.Nodes.SolutionNode\" data-throw-if-not-resolved=\"false\"></xref>. Provided by the <xref href=\"Microsoft.VisualStudio.Shell.Interop.IVsUpdateSolutionEvents\" data-throw-if-not-resolved=\"false\"></xref> interface.\n"
  example: []
  syntax:
    content: public interface ISolutionBuildEvents
    content.vb: Public Interface ISolutionBuildEvents
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: DulcisX.Nodes.Events.ISolutionBuildEvents.OnSolutionBuild
  commentId: E:DulcisX.Nodes.Events.ISolutionBuildEvents.OnSolutionBuild
  id: OnSolutionBuild
  parent: DulcisX.Nodes.Events.ISolutionBuildEvents
  langs:
  - csharp
  - vb
  name: OnSolutionBuild
  nameWithType: ISolutionBuildEvents.OnSolutionBuild
  fullName: DulcisX.Nodes.Events.ISolutionBuildEvents.OnSolutionBuild
  type: Event
  source:
    remote:
      path: src/DulcisX/DulcisX/Nodes/Events/ISolutionBuildEvents.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: OnSolutionBuild
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Nodes/Events/ISolutionBuildEvents.cs
    startLine: 12
  assemblies:
  - DulcisX
  namespace: DulcisX.Nodes.Events
  summary: "\nOccurs before a <xref href=\"DulcisX.Nodes.SolutionNode\" data-throw-if-not-resolved=\"false\"></xref> gets build.\n"
  example: []
  syntax:
    content: event Action<CancelTraslaterToken> OnSolutionBuild
    return:
      type: System.Action{DulcisX.Nodes.Events.CancelTraslaterToken}
    content.vb: Event OnSolutionBuild As Action(Of CancelTraslaterToken)
- uid: DulcisX.Nodes.Events.ISolutionBuildEvents.OnSolutionBuilt
  commentId: E:DulcisX.Nodes.Events.ISolutionBuildEvents.OnSolutionBuilt
  id: OnSolutionBuilt
  parent: DulcisX.Nodes.Events.ISolutionBuildEvents
  langs:
  - csharp
  - vb
  name: OnSolutionBuilt
  nameWithType: ISolutionBuildEvents.OnSolutionBuilt
  fullName: DulcisX.Nodes.Events.ISolutionBuildEvents.OnSolutionBuilt
  type: Event
  source:
    remote:
      path: src/DulcisX/DulcisX/Nodes/Events/ISolutionBuildEvents.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: OnSolutionBuilt
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Nodes/Events/ISolutionBuildEvents.cs
    startLine: 17
  assemblies:
  - DulcisX
  namespace: DulcisX.Nodes.Events
  summary: "\nOccurs when a <xref href=\"DulcisX.Nodes.SolutionNode\" data-throw-if-not-resolved=\"false\"></xref> got built.\n"
  example: []
  syntax:
    content: event Action<bool, bool, bool> OnSolutionBuilt
    return:
      type: System.Action{System.Boolean,System.Boolean,System.Boolean}
    content.vb: Event OnSolutionBuilt As Action(Of Boolean, Boolean, Boolean)
- uid: DulcisX.Nodes.Events.ISolutionBuildEvents.OnSolutionBuildCancel
  commentId: E:DulcisX.Nodes.Events.ISolutionBuildEvents.OnSolutionBuildCancel
  id: OnSolutionBuildCancel
  parent: DulcisX.Nodes.Events.ISolutionBuildEvents
  langs:
  - csharp
  - vb
  name: OnSolutionBuildCancel
  nameWithType: ISolutionBuildEvents.OnSolutionBuildCancel
  fullName: DulcisX.Nodes.Events.ISolutionBuildEvents.OnSolutionBuildCancel
  type: Event
  source:
    remote:
      path: src/DulcisX/DulcisX/Nodes/Events/ISolutionBuildEvents.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: OnSolutionBuildCancel
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Nodes/Events/ISolutionBuildEvents.cs
    startLine: 22
  assemblies:
  - DulcisX
  namespace: DulcisX.Nodes.Events
  summary: "\nOccurs when a <xref href=\"DulcisX.Nodes.SolutionNode\" data-throw-if-not-resolved=\"false\"></xref> build got cancled.\n"
  example: []
  syntax:
    content: event Action OnSolutionBuildCancel
    return:
      type: System.Action
    content.vb: Event OnSolutionBuildCancel As Action
- uid: DulcisX.Nodes.Events.ISolutionBuildEvents.OnProjectsConfigurationBuild
  commentId: E:DulcisX.Nodes.Events.ISolutionBuildEvents.OnProjectsConfigurationBuild
  id: OnProjectsConfigurationBuild
  parent: DulcisX.Nodes.Events.ISolutionBuildEvents
  langs:
  - csharp
  - vb
  name: OnProjectsConfigurationBuild
  nameWithType: ISolutionBuildEvents.OnProjectsConfigurationBuild
  fullName: DulcisX.Nodes.Events.ISolutionBuildEvents.OnProjectsConfigurationBuild
  type: Event
  source:
    remote:
      path: src/DulcisX/DulcisX/Nodes/Events/ISolutionBuildEvents.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: OnProjectsConfigurationBuild
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Nodes/Events/ISolutionBuildEvents.cs
    startLine: 27
  assemblies:
  - DulcisX
  namespace: DulcisX.Nodes.Events
  summary: "\nOccurs before the first <xref href=\"DulcisX.Nodes.ProjectNode\" data-throw-if-not-resolved=\"false\"></xref> got build.\n"
  example: []
  syntax:
    content: event Action<CancelTraslaterToken> OnProjectsConfigurationBuild
    return:
      type: System.Action{DulcisX.Nodes.Events.CancelTraslaterToken}
    content.vb: Event OnProjectsConfigurationBuild As Action(Of CancelTraslaterToken)
- uid: DulcisX.Nodes.Events.ISolutionBuildEvents.OnProjectConfigurationChanged
  commentId: P:DulcisX.Nodes.Events.ISolutionBuildEvents.OnProjectConfigurationChanged
  id: OnProjectConfigurationChanged
  parent: DulcisX.Nodes.Events.ISolutionBuildEvents
  langs:
  - csharp
  - vb
  name: OnProjectConfigurationChanged
  nameWithType: ISolutionBuildEvents.OnProjectConfigurationChanged
  fullName: DulcisX.Nodes.Events.ISolutionBuildEvents.OnProjectConfigurationChanged
  type: Property
  source:
    remote:
      path: src/DulcisX/DulcisX/Nodes/Events/ISolutionBuildEvents.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: OnProjectConfigurationChanged
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Nodes/Events/ISolutionBuildEvents.cs
    startLine: 32
  assemblies:
  - DulcisX
  namespace: DulcisX.Nodes.Events
  summary: "\nOccurs when a <xref href=\"DulcisX.Nodes.ProjectNode\" data-throw-if-not-resolved=\"false\"></xref> build configuration changed.\n"
  example: []
  syntax:
    content: EventDistributor<Action<ProjectNode>> OnProjectConfigurationChanged { get; }
    parameters: []
    return:
      type: DulcisX.Nodes.Events.EventDistributor{System.Action{DulcisX.Nodes.ProjectNode}}
    content.vb: ReadOnly Property OnProjectConfigurationChanged As EventDistributor(Of Action(Of ProjectNode))
  overload: DulcisX.Nodes.Events.ISolutionBuildEvents.OnProjectConfigurationChanged*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: DulcisX.Nodes.SolutionNode
  commentId: T:DulcisX.Nodes.SolutionNode
  parent: DulcisX.Nodes
  name: SolutionNode
  nameWithType: SolutionNode
  fullName: DulcisX.Nodes.SolutionNode
- uid: Microsoft.VisualStudio.Shell.Interop.IVsUpdateSolutionEvents
  commentId: T:Microsoft.VisualStudio.Shell.Interop.IVsUpdateSolutionEvents
  isExternal: true
- uid: DulcisX.Nodes.Events
  commentId: N:DulcisX.Nodes.Events
  name: DulcisX.Nodes.Events
  nameWithType: DulcisX.Nodes.Events
  fullName: DulcisX.Nodes.Events
- uid: DulcisX.Nodes
  commentId: N:DulcisX.Nodes
  name: DulcisX.Nodes
  nameWithType: DulcisX.Nodes
  fullName: DulcisX.Nodes
- uid: System.Action{DulcisX.Nodes.Events.CancelTraslaterToken}
  commentId: T:System.Action{DulcisX.Nodes.Events.CancelTraslaterToken}
  parent: System
  definition: System.Action`1
  name: Action<CancelTraslaterToken>
  nameWithType: Action<CancelTraslaterToken>
  fullName: System.Action<DulcisX.Nodes.Events.CancelTraslaterToken>
  nameWithType.vb: Action(Of CancelTraslaterToken)
  fullName.vb: System.Action(Of DulcisX.Nodes.Events.CancelTraslaterToken)
  name.vb: Action(Of CancelTraslaterToken)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DulcisX.Nodes.Events.CancelTraslaterToken
    name: CancelTraslaterToken
    nameWithType: CancelTraslaterToken
    fullName: DulcisX.Nodes.Events.CancelTraslaterToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DulcisX.Nodes.Events.CancelTraslaterToken
    name: CancelTraslaterToken
    nameWithType: CancelTraslaterToken
    fullName: DulcisX.Nodes.Events.CancelTraslaterToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Action{System.Boolean,System.Boolean,System.Boolean}
  commentId: T:System.Action{System.Boolean,System.Boolean,System.Boolean}
  parent: System
  definition: System.Action`3
  name: Action<Boolean, Boolean, Boolean>
  nameWithType: Action<Boolean, Boolean, Boolean>
  fullName: System.Action<System.Boolean, System.Boolean, System.Boolean>
  nameWithType.vb: Action(Of Boolean, Boolean, Boolean)
  fullName.vb: System.Action(Of System.Boolean, System.Boolean, System.Boolean)
  name.vb: Action(Of Boolean, Boolean, Boolean)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`3
  commentId: T:System.Action`3
  isExternal: true
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: DulcisX.Nodes.ProjectNode
  commentId: T:DulcisX.Nodes.ProjectNode
  parent: DulcisX.Nodes
  name: ProjectNode
  nameWithType: ProjectNode
  fullName: DulcisX.Nodes.ProjectNode
- uid: DulcisX.Nodes.Events.ISolutionBuildEvents.OnProjectConfigurationChanged*
  commentId: Overload:DulcisX.Nodes.Events.ISolutionBuildEvents.OnProjectConfigurationChanged
  name: OnProjectConfigurationChanged
  nameWithType: ISolutionBuildEvents.OnProjectConfigurationChanged
  fullName: DulcisX.Nodes.Events.ISolutionBuildEvents.OnProjectConfigurationChanged
- uid: DulcisX.Nodes.Events.EventDistributor{System.Action{DulcisX.Nodes.ProjectNode}}
  commentId: T:DulcisX.Nodes.Events.EventDistributor{System.Action{DulcisX.Nodes.ProjectNode}}
  parent: DulcisX.Nodes.Events
  definition: DulcisX.Nodes.Events.EventDistributor`1
  name: EventDistributor<Action<ProjectNode>>
  nameWithType: EventDistributor<Action<ProjectNode>>
  fullName: DulcisX.Nodes.Events.EventDistributor<System.Action<DulcisX.Nodes.ProjectNode>>
  nameWithType.vb: EventDistributor(Of Action(Of ProjectNode))
  fullName.vb: DulcisX.Nodes.Events.EventDistributor(Of System.Action(Of DulcisX.Nodes.ProjectNode))
  name.vb: EventDistributor(Of Action(Of ProjectNode))
  spec.csharp:
  - uid: DulcisX.Nodes.Events.EventDistributor`1
    name: EventDistributor
    nameWithType: EventDistributor
    fullName: DulcisX.Nodes.Events.EventDistributor
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DulcisX.Nodes.ProjectNode
    name: ProjectNode
    nameWithType: ProjectNode
    fullName: DulcisX.Nodes.ProjectNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DulcisX.Nodes.Events.EventDistributor`1
    name: EventDistributor
    nameWithType: EventDistributor
    fullName: DulcisX.Nodes.Events.EventDistributor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DulcisX.Nodes.ProjectNode
    name: ProjectNode
    nameWithType: ProjectNode
    fullName: DulcisX.Nodes.ProjectNode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: DulcisX.Nodes.Events.EventDistributor`1
  commentId: T:DulcisX.Nodes.Events.EventDistributor`1
  name: EventDistributor<TDelegate>
  nameWithType: EventDistributor<TDelegate>
  fullName: DulcisX.Nodes.Events.EventDistributor<TDelegate>
  nameWithType.vb: EventDistributor(Of TDelegate)
  fullName.vb: DulcisX.Nodes.Events.EventDistributor(Of TDelegate)
  name.vb: EventDistributor(Of TDelegate)
  spec.csharp:
  - uid: DulcisX.Nodes.Events.EventDistributor`1
    name: EventDistributor
    nameWithType: EventDistributor
    fullName: DulcisX.Nodes.Events.EventDistributor
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DulcisX.Nodes.Events.EventDistributor`1
    name: EventDistributor
    nameWithType: EventDistributor
    fullName: DulcisX.Nodes.Events.EventDistributor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )

### YamlMime:ManagedReference
items:
- uid: DulcisX.Core.Components.ResultInfoBarHandle`1
  commentId: T:DulcisX.Core.Components.ResultInfoBarHandle`1
  id: ResultInfoBarHandle`1
  parent: DulcisX.Core.Components
  children:
  - DulcisX.Core.Components.ResultInfoBarHandle`1.OnResult
  - DulcisX.Core.Components.ResultInfoBarHandle`1.WaitForResultAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ResultInfoBarHandle<TIdentifier>
  nameWithType: ResultInfoBarHandle<TIdentifier>
  fullName: DulcisX.Core.Components.ResultInfoBarHandle<TIdentifier>
  type: Class
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/Components/InfoBar/IdentifierInfoBarHandle.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: ResultInfoBarHandle
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/Components/InfoBar/IdentifierInfoBarHandle.cs
    startLine: 11
  assemblies:
  - DulcisX
  namespace: DulcisX.Core.Components
  summary: "\nRepresents a result Handler of an InforBar message.\n"
  example: []
  syntax:
    content: 'public class ResultInfoBarHandle<TIdentifier> : InfoBarHandle'
    typeParameters:
    - id: TIdentifier
      description: The type of the button identifier.
    content.vb: >-
      Public Class ResultInfoBarHandle(Of TIdentifier)
          Inherits InfoBarHandle
  inheritance:
  - System.Object
  - DulcisX.Core.Components.InfoBarHandle
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ResultInfoBarHandle(Of TIdentifier)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: DulcisX.Core.Components.ResultInfoBarHandle(Of TIdentifier)
  name.vb: ResultInfoBarHandle(Of TIdentifier)
- uid: DulcisX.Core.Components.ResultInfoBarHandle`1.OnResult
  commentId: E:DulcisX.Core.Components.ResultInfoBarHandle`1.OnResult
  id: OnResult
  parent: DulcisX.Core.Components.ResultInfoBarHandle`1
  langs:
  - csharp
  - vb
  name: OnResult
  nameWithType: ResultInfoBarHandle<TIdentifier>.OnResult
  fullName: DulcisX.Core.Components.ResultInfoBarHandle<TIdentifier>.OnResult
  type: Event
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/Components/InfoBar/IdentifierInfoBarHandle.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: OnResult
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/Components/InfoBar/IdentifierInfoBarHandle.cs
    startLine: 16
  assemblies:
  - DulcisX
  namespace: DulcisX.Core.Components
  summary: "\nOccurs when the user produces any kind of result.\n"
  example: []
  syntax:
    content: public event Action<TIdentifier, bool> OnResult
    return:
      type: System.Action{{TIdentifier},System.Boolean}
    content.vb: Public Event OnResult As Action(Of TIdentifier, Boolean)
  nameWithType.vb: ResultInfoBarHandle(Of TIdentifier).OnResult
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DulcisX.Core.Components.ResultInfoBarHandle(Of TIdentifier).OnResult
- uid: DulcisX.Core.Components.ResultInfoBarHandle`1.WaitForResultAsync(System.Threading.CancellationToken)
  commentId: M:DulcisX.Core.Components.ResultInfoBarHandle`1.WaitForResultAsync(System.Threading.CancellationToken)
  id: WaitForResultAsync(System.Threading.CancellationToken)
  parent: DulcisX.Core.Components.ResultInfoBarHandle`1
  langs:
  - csharp
  - vb
  name: WaitForResultAsync(CancellationToken)
  nameWithType: ResultInfoBarHandle<TIdentifier>.WaitForResultAsync(CancellationToken)
  fullName: DulcisX.Core.Components.ResultInfoBarHandle<TIdentifier>.WaitForResultAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/Components/InfoBar/IdentifierInfoBarHandle.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: WaitForResultAsync
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/Components/InfoBar/IdentifierInfoBarHandle.cs
    startLine: 55
  assemblies:
  - DulcisX
  namespace: DulcisX.Core.Components
  summary: "\nAsynchronously waits for an result which is produced by the user.\n"
  example: []
  syntax:
    content: public Task<AsyncResult<TIdentifier>> WaitForResultAsync(CancellationToken ct = default(CancellationToken))
    parameters:
    - id: ct
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task{DulcisX.Core.AsyncResult{{TIdentifier}}}
      description: An <xref href="DulcisX.Core.AsyncResult%601" data-throw-if-not-resolved="false"></xref> containg the <code data-dev-comment-type="typeparamref" class="typeparamref">TIdentifier</code> of the clicked button.
    content.vb: Public Function WaitForResultAsync(ct As CancellationToken = Nothing) As Task(Of AsyncResult(Of TIdentifier))
  overload: DulcisX.Core.Components.ResultInfoBarHandle`1.WaitForResultAsync*
  nameWithType.vb: ResultInfoBarHandle(Of TIdentifier).WaitForResultAsync(CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DulcisX.Core.Components.ResultInfoBarHandle(Of TIdentifier).WaitForResultAsync(System.Threading.CancellationToken)
references:
- uid: DulcisX.Core.Components
  commentId: N:DulcisX.Core.Components
  name: DulcisX.Core.Components
  nameWithType: DulcisX.Core.Components
  fullName: DulcisX.Core.Components
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DulcisX.Core.Components.InfoBarHandle
  commentId: T:DulcisX.Core.Components.InfoBarHandle
  parent: DulcisX.Core.Components
  name: InfoBarHandle
  nameWithType: InfoBarHandle
  fullName: DulcisX.Core.Components.InfoBarHandle
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Action{{TIdentifier},System.Boolean}
  commentId: T:System.Action{`0,System.Boolean}
  parent: System
  definition: System.Action`2
  name: Action<TIdentifier, Boolean>
  nameWithType: Action<TIdentifier, Boolean>
  fullName: System.Action<TIdentifier, System.Boolean>
  nameWithType.vb: Action(Of TIdentifier, Boolean)
  fullName.vb: System.Action(Of TIdentifier, System.Boolean)
  name.vb: Action(Of TIdentifier, Boolean)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TIdentifier
    nameWithType: TIdentifier
    fullName: TIdentifier
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TIdentifier
    nameWithType: TIdentifier
    fullName: TIdentifier
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: DulcisX.Core.AsyncResult`1
  commentId: T:DulcisX.Core.AsyncResult`1
  name: AsyncResult<TResult>
  nameWithType: AsyncResult<TResult>
  fullName: DulcisX.Core.AsyncResult<TResult>
  nameWithType.vb: AsyncResult(Of TResult)
  fullName.vb: DulcisX.Core.AsyncResult(Of TResult)
  name.vb: AsyncResult(Of TResult)
  spec.csharp:
  - uid: DulcisX.Core.AsyncResult`1
    name: AsyncResult
    nameWithType: AsyncResult
    fullName: DulcisX.Core.AsyncResult
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DulcisX.Core.AsyncResult`1
    name: AsyncResult
    nameWithType: AsyncResult
    fullName: DulcisX.Core.AsyncResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: DulcisX.Core.Components.ResultInfoBarHandle`1.WaitForResultAsync*
  commentId: Overload:DulcisX.Core.Components.ResultInfoBarHandle`1.WaitForResultAsync
  name: WaitForResultAsync
  nameWithType: ResultInfoBarHandle<TIdentifier>.WaitForResultAsync
  fullName: DulcisX.Core.Components.ResultInfoBarHandle<TIdentifier>.WaitForResultAsync
  nameWithType.vb: ResultInfoBarHandle(Of TIdentifier).WaitForResultAsync
  fullName.vb: DulcisX.Core.Components.ResultInfoBarHandle(Of TIdentifier).WaitForResultAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{DulcisX.Core.AsyncResult{{TIdentifier}}}
  commentId: T:System.Threading.Tasks.Task{DulcisX.Core.AsyncResult{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AsyncResult<TIdentifier>>
  nameWithType: Task<AsyncResult<TIdentifier>>
  fullName: System.Threading.Tasks.Task<DulcisX.Core.AsyncResult<TIdentifier>>
  nameWithType.vb: Task(Of AsyncResult(Of TIdentifier))
  fullName.vb: System.Threading.Tasks.Task(Of DulcisX.Core.AsyncResult(Of TIdentifier))
  name.vb: Task(Of AsyncResult(Of TIdentifier))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DulcisX.Core.AsyncResult`1
    name: AsyncResult
    nameWithType: AsyncResult
    fullName: DulcisX.Core.AsyncResult
  - name: <
    nameWithType: <
    fullName: <
  - name: TIdentifier
    nameWithType: TIdentifier
    fullName: TIdentifier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DulcisX.Core.AsyncResult`1
    name: AsyncResult
    nameWithType: AsyncResult
    fullName: DulcisX.Core.AsyncResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TIdentifier
    nameWithType: TIdentifier
    fullName: TIdentifier
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks

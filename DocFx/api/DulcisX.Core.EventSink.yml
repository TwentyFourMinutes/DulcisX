### YamlMime:ManagedReference
items:
- uid: DulcisX.Core.EventSink
  commentId: T:DulcisX.Core.EventSink
  id: EventSink
  parent: DulcisX.Core
  children:
  - DulcisX.Core.EventSink.Cookie
  - DulcisX.Core.EventSink.Dispose
  - DulcisX.Core.EventSink.SetCookie(System.UInt32)
  langs:
  - csharp
  - vb
  name: EventSink
  nameWithType: EventSink
  fullName: DulcisX.Core.EventSink
  type: Class
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/EventSink.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: EventSink
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/EventSink.cs
    startLine: 7
  assemblies:
  - DulcisX
  namespace: DulcisX.Core
  summary: "\nProvides basic logic for the inheritance of native Visual Studio Events.\n"
  example: []
  syntax:
    content: 'public abstract class EventSink : IDisposable'
    content.vb: >-
      Public MustInherit Class EventSink
          Implements IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - DulcisX.Nodes.Events.NodeEventSink
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: DulcisX.Core.EventSink.Cookie
  commentId: P:DulcisX.Core.EventSink.Cookie
  id: Cookie
  parent: DulcisX.Core.EventSink
  langs:
  - csharp
  - vb
  name: Cookie
  nameWithType: EventSink.Cookie
  fullName: DulcisX.Core.EventSink.Cookie
  type: Property
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/EventSink.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: Cookie
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/EventSink.cs
    startLine: 12
  assemblies:
  - DulcisX
  namespace: DulcisX.Core
  summary: "\nGets the Cookie which identifies the current <xref href=\"DulcisX.Core.EventSink\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public uint Cookie { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Property Cookie As UInteger
  overload: DulcisX.Core.EventSink.Cookie*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DulcisX.Core.EventSink.SetCookie(System.UInt32)
  commentId: M:DulcisX.Core.EventSink.SetCookie(System.UInt32)
  id: SetCookie(System.UInt32)
  parent: DulcisX.Core.EventSink
  langs:
  - csharp
  - vb
  name: SetCookie(UInt32)
  nameWithType: EventSink.SetCookie(UInt32)
  fullName: DulcisX.Core.EventSink.SetCookie(System.UInt32)
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/EventSink.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: SetCookie
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/EventSink.cs
    startLine: 20
  assemblies:
  - DulcisX
  namespace: DulcisX.Core
  summary: "\nSets the Cookie of the <xref href=\"DulcisX.Core.EventSink\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected void SetCookie(uint cookie)
    parameters:
    - id: cookie
      type: System.UInt32
      description: The cookie which is used to identify the <xref href="DulcisX.Core.EventSink" data-throw-if-not-resolved="false"></xref>.
    content.vb: Protected Sub SetCookie(cookie As UInteger)
  overload: DulcisX.Core.EventSink.SetCookie*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: DulcisX.Core.EventSink.Dispose
  commentId: M:DulcisX.Core.EventSink.Dispose
  id: Dispose
  parent: DulcisX.Core.EventSink
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: EventSink.Dispose()
  fullName: DulcisX.Core.EventSink.Dispose()
  type: Method
  source:
    remote:
      path: src/DulcisX/DulcisX/Core/EventSink.cs
      branch: master
      repo: https://github.com/TwentyFourMinutes/DulcisX.git
    id: Dispose
    path: ../../DulcisX - master/src/DulcisX/DulcisX/Core/EventSink.cs
    startLine: 36
  assemblies:
  - DulcisX
  namespace: DulcisX.Core
  summary: "\nDisposes the current <xref href=\"DulcisX.Core.EventSink\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract void Dispose()
    content.vb: Public MustOverride Sub Dispose
  overload: DulcisX.Core.EventSink.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: DulcisX.Core
  commentId: N:DulcisX.Core
  name: DulcisX.Core
  nameWithType: DulcisX.Core
  fullName: DulcisX.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DulcisX.Core.EventSink
  commentId: T:DulcisX.Core.EventSink
  parent: DulcisX.Core
  name: EventSink
  nameWithType: EventSink
  fullName: DulcisX.Core.EventSink
- uid: DulcisX.Core.EventSink.Cookie*
  commentId: Overload:DulcisX.Core.EventSink.Cookie
  name: Cookie
  nameWithType: EventSink.Cookie
  fullName: DulcisX.Core.EventSink.Cookie
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: DulcisX.Core.EventSink.SetCookie*
  commentId: Overload:DulcisX.Core.EventSink.SetCookie
  name: SetCookie
  nameWithType: EventSink.SetCookie
  fullName: DulcisX.Core.EventSink.SetCookie
- uid: DulcisX.Core.EventSink.Dispose*
  commentId: Overload:DulcisX.Core.EventSink.Dispose
  name: Dispose
  nameWithType: EventSink.Dispose
  fullName: DulcisX.Core.EventSink.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
